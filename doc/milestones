planung of development:

0. do things
1. do more (magic) things
2. do absolutely awesome stuff
3. ask the community for more awesome stuff to do
4. ask the community to do the awesome stuff for us

ahem, nope, this is the real plan:
list of milestones for the prototype releases:

0
	text file that describes the technology (language, libraries, build system, coding standards, ...) we're using
	(may be incomplete, will most definitely be changed later on anyway)
	in the following, we assume that sdl was chosen.
1
	applicatin runs, fullscreen, black, builds with build system (on GNU/Linux)
	_no_ menu, it directly launches into the game
2
	render a single building (an university.), reading it from the stock age2 media files
3
	render diamond-shaped map (monoterrain), with any number of buildings (of any kind, in grid), with mouse/keyboard scrolling
4
	render units on map (with animations)
5
	mouse selection and basic commands ("go here, delete")
6
	hud (lower control panel), could for example display unit name. 
	hud for buildings supports unit creation
7
	civ research state tracker, support for research in building hud
8
	villager building menu for creation of buildings (instant)
9
	realistic building creation (amount of work needed, building process)
10
	path finding and collision
11
	resource system (and upper hud bar, creating units/building consumes resources)
12
	resource gathering by villagers
13
	health points, ballistics, attacking
	units can be switched to different colors by short keys
14
	non-uniform maps (mixed water, grasland)
15
	terrain altitudes (plus effects on ballistics)

=== working singleplayer without AI is done here. multiplayer stuff is the main focus now

16
	dedicated server (!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!)
	lobby stuff not implemented yet
	all clients connect to server (at the beginning only one client must be supported...)
	initialization of session:
		client: OHAI. i want session 23742, and be the blue player
		server: <map blob> <plz wait for other clients to be ready.> <time synchronization> <go!>
	game logic runs on both server and client, some serious syncing is done between them (important: physics frame IDs of
	user inputs)
17
	support for multiple players
18
	limitation of multiplayer players to one color
	actually this is a small step, but there will be bugs, loads of them.
	at this point, with a proper starting map (one villager per player on grasland), battles can be fought.
19
	(maybe as early as 16): game recording, playback


things to be done sometime:
* get all units to display and animate
* some rudimentary launch menu
* implement AI (use GlaDOS?)
* messaging and taunts (important!)
* client side prediction in multiplayer
* random map generation
* age2 map reader

things to consider:
* singleplayer

ideas 4 teh lulz:
* friendly fire enable button (lol)
* >64 player matches
** more than 8 player base colors needed then

things to keep in mind:
* performance (responsiveness, fps, needed ressources)
* exactly cloning age2 (also include the networking bugs, for original feeling!)
* good and funny code (coding standards..)
