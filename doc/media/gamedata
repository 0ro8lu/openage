gamedata
========

the contents of empires2_x1_p1.dat

struct {
	char[8] versionstr

	unsigned short terrain_restriction_count
	unsigned short terrain_count
	int32_t [terrain_restriction_count] terrain_restriction_offset0
	int32_t [terrain_restriction_count] terrain_restriction_offset1
	struct {
		float[terrain_count] terrain_accessibles
		struct {
			int32_t buildable
			int32_t graphic_id_first
			int32_t graphic_id_second
			int32_t replication_amount
		} terrain_pass_graphic [terrain_count]
	} terrain_restriction [terrain_restriction_count]

	unsigned short player_color_count
	struct{
		int32_t id
		int32_t palette
		int32_t color
		int32_t unknown0
		int32_t unknown1
		int32_t minimap_color
		int32_t unknown2
		int32_t unknown3
		int32_t unknown4
	} player_color [player_color_count]

	unsigned short sound_count
	struct {
		int32_t id
		unsigned short item_count
		int32_t unknown0
		struct {
			char[13] filename //really 13?
			int32_t resource_id
			short probability
			short civilisation
			short unknown0
		} sound_item [item_count]
	} sound [sound_count]

	short graphic_count
	int32_t [graphic_count] graphic_offset
	struct {
		struct {
			char[21] name0
			char[13] name1
			int32_t slp
			char unknown0
			char unknown1
			char layer
			char unknown2
			char unknown3
			char replay
			short[4] coordinates
			unsigned short delta_count
			short sound_id
			bool attack_sound_used
			unsigned short frame_count
			unsigned short angle_count
			float unknown4
			float frame_rate
			float replay_delay
			char sequence_type
			short id
			short type
		} graphic_header
		struct {
			short graphic_id
			short unknown0
			short unknown1
			short unknown2
			short direction_x
			short direction_y
			short unknown3
			short unknown4
		} graphic_delta [graphic_header.delta_count]
		//if(graphic_header.attack_sound_used):
		struct {
			struct {
				short sound_delay
				short sound_id
			} sound_props [3]
		} graphic_attack_sound [graphic_header.angle_count]
	} graphic [graphic_count]
	char [138] graphic_rendering

	struct {
		short unknown0
		short unknown1
		char[13] name0
		char[13] name1
		int32_t slp_id
		int32_t unknown2
		int32_t sound_id
		int32_t blend_priority
		int32_t blend_type
		char[3] color
		short unknown3
		short unknown4
		char[23] unknown5
		short frame_count
		short[2] unknown6
		short[54] unknown7
		short terrain_replacement_id
		short terrain_dimensions0
		short terrain_dimensions1
		char[84] unknown8
		short[30] terrain_unit_id
		short[30] terrain_unit_density
		char[30] unknown9
		short terrain_units_used_count
	} terrain [terrain_count]

	char[438] unknown0

	struct {
		short enabled
		char[13] name0
		char[13] name1
		int ressource_id
		int unknown
		int unknown1
		char[3] color
		char unknown
		int unknown
		int unknown
		struct {
			short frame_id
			short flag0
			short flag1
		} frame_data [230]
		short frame_count
		short unknown
		short unknown
		short unknown
	} terrrain_borders [16]

	char[28] zero
	unsigned short terrain_count1
	char[12722] rendering_etc

	uint32_t tech_count
	struct {
		char[31] name
		unsigned short effect_count
		struct {
			signed char type
			short unit
			short class
			short attribute
			float amount
		} effect [effect_count]
	} tech [tech_count]

	uint32_t unit_count
	struct {
		bool exists
		//if(exists) {
		unsigned short command_count
		struct {
			short one
			short id
			char unknown
			short type
			short class_id
			short unit_id
			short unknown
			short ressource_in
			short sub_type
			short ressource_out
			short unknown
			float unknown
			float execution_radius
			float unknown
			char unknown
			float unknown
			char unknown
			char unknown
			char unknown
			short unknown
			short unknown
			char unknown
			short[6] graphic
		} unit_command [command_count]
		//}
	} unit_header [unit_count]

	unsigned short civ_count
	struct {
		char one
		char[20] name
		unsigned short ressources_count
		short tech_tree_id
		ishort team_bonus_id
		float[ressources_count] ressources
		char graphic_set
		unsigned short units_count
		int32_t[unit_count] unit_offsets
		struct {
			//TODO
		} unit [unit_count]
	} civ [civ_count]

} empires2_x1_p1
