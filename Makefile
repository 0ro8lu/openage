# openage main makefile
#
# this actually just forwards calls to the cmake-generated files in bin.


# original msage2 asset directory
AGE2DIR=

# openage asset directory
DATADIR=data

# this list specifies needed media files for the convert script
# TODO: don't rely on the make system, let our binary call the convert script
needed_media = graphics:*.* terrain:*.* sounds0:*.* sounds1:*.* gamedata0:*.* gamedata1:*.* gamedata2:*.* interface:*.*

binary = ./openage
runargs = --data=$(DATADIR)
builddir = bin

.PHONY: all
all: openage

$(builddir):
	echo "call ./configure to initialize the build directory."
	echo "also see ./configure --help, and building.md"
	false

.PHONY: openage
openage: $(builddir)
	@make -C $(builddir)

.PHONY: install
install: $(builddir)
	@make -C $(builddir) install

.PHONY: media
media: $(builddir)
	@if test ! -d "$(AGE2DIR)"; then echo "you need to specify AGE2DIR (e.g. ~/.wine/drive_c/age)."; false; fi
	buildsystem/runinenv PYTHONPATH=prependpath:py python3 -m openage.convert -v media -o "$(DATADIR)/age/" "$(AGE2DIR)" $(needed_media)

.PHONY: medialist
medialist:
	@echo "$(needed_media)"

.PHONY: run
run: openage
	$(binary) $(runargs)

.PHONY: runval
runval: openage
	valgrind --leak-check=full --track-origins=yes -v $(binary) $(runargs)

.PHONY: rungdb
rungdb: openage
	gdb --args $(binary) $(runargs)

.PHONY: test
test:
	@make -C $(builddir) test

.PHONY: doc
doc:
	@make -C $(builddir) doc

.PHONY: clean
clean:
	# removes all objects and binaries
	@make -C $(builddir) clean

.PHONY: cleanbuilddirs
cleanbin:
	# everything created by ./configure
	rm -rf .bin bin
	# convenience symlinks created by ./configure
	rm -rf openage bin
	# eventual remains from accidents (accidential in-source build)
	rm -rf CMakeCache.txt CMakeFiles cmake_install.cmake

.PHONY: mrproper
mrproper: cleanbin
	# mrproper will additional clear converted assets
	rm -rf data/age

.PHONY: help
help: $(builddir)/Makefile
	@echo "openage buildsystem"
	@echo ""
	@echo ""
	@echo ""
	@echo "targets:"
	@echo ""
	@echo "openage   -> compile main binary"
	@echo "media     -> convert media files, usage: make media AGE2DIR=~/.wine/ms-games/age2"
	@echo "medialist -> list needed media files for current version"
	@echo "doc       -> create documentation files"
	@echo ""
	@echo "clean     -> clean up object files"
	@echo "cleanbin  -> clean up all files generated by ./configure and make"
	@echo "mrproper  -> clean up everything: configure stuff, binary files, media files"
	@echo ""
	@echo "run       -> run openage"
	@echo "runval    -> run valgrind, analyze for memleaks"
	@echo "rungdb    -> run inside gdb"
	@echo ""
	@echo ""
	@echo "Now follows the CMake help. (= make -C $(builddir)) :"
	@make -C $(builddir) help
